extends keys-layout

block content
  main.container
    h1.text-uppercase #{("Public/Private Key Pairs")} 
    .card.bg-light
      .card-body
        form.card-body
          .row.mb-3
            label.col-sm-2.col-form-label.text-end(for='data') #{("Private Key")}
            .col-md-10
              .input-group
                input.form-control#privateKey(aria-label='Private Key', type='number')
                span.input-group-btn
                  button.btn.btn-secondary#randomButton(type='button', ) #{("Random")}
          .row.mb-3
            label.col-sm-2.col-form-label.text-end(for='data') #{("Public Key")}
            .col-md-10
              input#publicKey.form-control(disabled)

  script.
    var EC = elliptic.elliptic().ec;
    var ec = new EC('secp256k1');

    var keypair = ec.genKeyPair();
    if (Cookies.get('privateKey')) {
      keypair = ec.keyFromPrivate(Cookies.get('privateKey'));
    }

    function update() {
      var prv = keypair.getPrivate('hex');
      var pub = keypair.getPublic('hex');
      $('#privateKey').val(bigInt(prv, 16).toString());
      $('#publicKey').val(pub);
      Cookies.set('privateKey', prv.toString());
      Cookies.set('publicKey', pub.toString());
    }

    function random() {
      keypair = ec.genKeyPair();
      update();
    }

    $(function() {
      $('#randomButton').click(random);
      $('#privateKey').bind('keyup', function() {
        $('#privateKey').val($('#privateKey').val().replace(/\D/g, ''));
        keypair = ec.keyFromPrivate(bigInt($('#privateKey').val()).toString(16));
        update();
      });
      update();
    });
